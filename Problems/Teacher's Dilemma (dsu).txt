include <bits/stdc++.h>
using namespace std;
 
int parent[100001];
 
int find(int a) {
    if (parent[a]<0)
        return a;
    parent[a]=find(parent[a]);
    return parent[a];
}
 
void Union(int a, int b) {
    if (parent[a]<=parent[b]) { //more negative rank
        parent[a]+=parent[b];
        parent[b]=a;
    }
    else {
        parent[b]+=parent[a];
        parent[a]=b;
    }
}
 
int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    int N,M; cin>>N>>M;
    for (int j=1;j<=N;j++) 
        parent[j]=-1;
    while (M--) {
        int u,v; cin>>u>>v;
        u=find(u);
        v=find(v);
        if (u!=v) Union(u,v);
    }
    long long ans=1;
    for (int i=1;i<=N;i++) {
        if (parent[i]<0)
            ans=(ans*abs(parent[i]))%1000000007;
    }
    cout<<ans<<"\n";
    return 0;
}